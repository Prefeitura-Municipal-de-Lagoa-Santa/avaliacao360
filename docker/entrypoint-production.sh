#!/bin/bash
set -e

echo "üöÄ Iniciando aplica√ß√£o Avalia√ß√£o 360..."

# Detecta o tipo de container (app, queue, scheduler)
CONTAINER_ROLE=${CONTAINER_ROLE:-app}

echo "üì¶ Container role: $CONTAINER_ROLE"

# Cria diret√≥rios necess√°rios
mkdir -p /run/php
mkdir -p /var/www/html/storage/logs
mkdir -p /var/www/html/bootstrap/cache

# Ajusta permiss√µes
chown -R www-data:www-data /var/www/html/storage /var/www/html/bootstrap/cache
chmod -R 775 /var/www/html/storage /var/www/html/bootstrap/cache

# Aguarda um pouco para o banco estar pronto (apenas em produ√ß√£o)
if [ "$APP_ENV" = "production" ] && [ "$CONTAINER_ROLE" = "app" ]; then
    echo "‚è≥ Aguardando banco de dados ficar dispon√≠vel..."
    sleep 10
fi

# Execu√ß√µes espec√≠ficas por tipo de container
case $CONTAINER_ROLE in
    app)
        echo "üåê Iniciando container de aplica√ß√£o web..."
        
        # Gera chave da aplica√ß√£o se n√£o existir
        if [ -z "$APP_KEY" ] || [ "$APP_KEY" = "" ]; then
            echo "üîë Gerando chave da aplica√ß√£o..."
            php artisan key:generate --force
        fi
        
        # Executa migra√ß√µes (apenas no container principal)
        echo "üóÑÔ∏è Executando migra√ß√µes do banco de dados..."
        php artisan migrate --force
        
        # Cache de configura√ß√£o para produ√ß√£o
        if [ "$APP_ENV" = "production" ]; then
            echo "‚ö° Otimizando para produ√ß√£o..."
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
        fi
        
        # Cria link simb√≥lico para storage
        php artisan storage:link
        
        # Inicia nginx e php-fpm via supervisor
        echo "üéØ Iniciando servi√ßos web..."
        exec /usr/bin/supervisord -c /etc/supervisor/supervisord.conf
        ;;
        
    queue)
        echo "‚öôÔ∏è Iniciando worker de filas..."
        
        # Aguarda o container principal estar pronto
        sleep 15
        
        # Inicia worker de filas
        exec php artisan queue:work --tries=3 --timeout=90 --memory=256
        ;;
        
    scheduler)
        echo "‚è∞ Iniciando agendador de tarefas..."
        
        # Aguarda o container principal estar pronto
        sleep 20
        
        # Inicia scheduler
        exec php artisan schedule:work
        ;;
        
    *)
        echo "‚ùå Tipo de container desconhecido: $CONTAINER_ROLE"
        exit 1
        ;;
esac